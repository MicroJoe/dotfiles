# ~/.zshrc

# oh-my-zsh configuration
export ZSH=$HOME/.oh-my-zsh

ZSH_THEME="microjoe"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)

source $ZSH/oh-my-zsh.sh

# History configuration
HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000

# Do not record duplicate lines in history
setopt HIST_IGNORE_DUPS

# Enable VI mode on command line
# bindkey -v

# The following line was added by compinstall
zstyle :compinstall filename '/home/microjoe/.zshrc'

# Enable autocompletion
#autoload -Uz compinit && compinit

# Custom prompt
#autoload -U promptinit && promptinit
#autoload -U colors && colors

#local return_code="%(?..%{$fg[red]%}%? ↵%{$reset_color%})"

#if [ "`id -u`" -eq 0 ]; then
#    PROMPT="%{$fg[red]%}%n%{$fg[yellow]%}@%{$fg[green]%}%m%{$reset_color%} %~ %{$fg[red]%}» %{$reset_color%}"
#else
#    PROMPT="%{$fg[green]%}%n%{$fg[yellow]%}@%{$fg[green]%}%m%{$reset_color%} %~ %{$fg[red]%}» %{$reset_color%}"
#fi
#RPROMPT=" ${return_code}"

# Aliases
alias ls="ls --color=auto"
alias sl="ls"
alias ll="ls -alh"
alias lls="ls -lh"
alias g="gvim --remote-silent"
alias ocaml="rlwrap ocaml"

# If using termite, fake use xterm over ssh in order to make colors work
if [ ! -z "$TERM" -a "$TERM" '==' 'xterm-termite' ]; then
	alias ssh="TERM=xterm ssh"
fi

# Expand path
export PATH=$PATH:$(ruby -rubygems -e "puts Gem.user_dir")/bin
export PATH=$PATH:$HOME/bin:$HOME/.cabal/bin

# Expand library path
export LD_LIBRARY_PATH=:/usr/local/lib:/usr/local/lib

# Export some useful things
export TERMINAL=termite
export EDITOR=vim
export BROWSER=firefox
export CC=clang
export CXX=clang++

# Load OPAM configuration
if [ -d ~/.opam ]; then
	. ~/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true
fi

# Call dircolors for colorized ls output to work well
eval $(dircolors ~/.dircolors)
